
@{
    ViewData["Title"] = "Buchungsanfrage anlegen";
}
@model Sopro.ViewModels.BookingCreateViewModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
<script src="~/js/Validation.js" asp-append-version="true"></script>
<h1 class="display-4">Buchungsanfrage anlegen</h1>
@{ Sopro.Interfaces.AdministrationController.IBooking booking = Model.booking;}
<form asp-controller="Booking" asp-action="Post" method="post">
    <div>
        <div class="form-group">
            <label>Firmenstandort wählen</label>
            <select class="form-control" asp-for="@Model.locationId" required>
                @foreach (Sopro.Models.Infrastructure.Location location in Model.locations)
                {
                    if (location == Model.booking.location)
                    {
                        <option value="@location.id" selected="selected">@location.name </option>
                    }
                    else if (location.zones.Any())
                    {
                        <option value="@location.id">@location.name </option>
                    }

                }
            </select>
            @Html.ValidationMessageFor(model => model.locationId)
            <small></small>
        </div>

        <div class="form-group">
            <label>Steckertyp des Fahrzeugs</label>
            <div class="flex-column pl-4">
                <div>
                    <label for="@Model.ccs">CCS-Stecker</label>
                    <input type="checkbox" asp-for="@Model.ccs" checked="@Model.ccs" />
                    @Html.ValidationMessageFor(model => model.ccs)
                </div>
                <div>
                    <label for="@Model.type2">Typ-2-Stecker</label>
                    <input type="checkbox" asp-for="@Model.type2" checked="@Model.type2" />
                    @Html.ValidationMessageFor(model => model.type2)
                </div>
            </div>
            <small>Wähle die / den kompatiblen Stecker.</small>
        </div>

        <div class="form-group">
            <label for="@booking.socStart">Ladestand des Fahrzeugs</label>
            <div class="input-group">
                <input class="form-control" placeholder="@booking.socStart" asp-for="@booking.socStart" type="number" min="0" max="100" onchange="socMin(event)" required />
                <div class="input-group-append">
                    <span class="input-group-text"> % </span>
                </div>
                @Html.ValidationMessageFor(model => model.booking.socStart)
            </div>
            <small></small>
        </div>

        <div class="form-group">
            <label for="@booking.socEnd">Benötigter Ladestand des Fahrzeugs</label>
            <div class="input-group">
                <input class="form-control" placeholder="@booking.socEnd" asp-for="@booking.socEnd" type="number" min="0" max="100" onchange="socMin(event)" required />
                <div class="input-group-append">
                    <span class="input-group-text"> % </span>
                </div>
                @Html.ValidationMessageFor(model => model.booking.socEnd)
            </div>
            <small></small>
        </div>

        <div class="form-group">
            <label for="@booking.capacity">Ladekapazität</label>
            <div class="input-group">
                <input class="form-control" placeholder="@booking.capacity" asp-for="@booking.capacity" type="number" min="0" required />
                <div class="input-group-append">
                    <span class="input-group-text"> kW </span>
                </div>
                @Html.ValidationMessageFor(model => model.booking.capacity)
            </div>
            <small></small>
        </div>

        <div class="form-group input-append date form_datetime">
            <label for="@booking.startTime">Startzeit der Buchung</label>
            <input type="datetime-local" class="form-control" placeholder="@booking.startTime" asp-for="@booking.startTime" onchange="endTimeMIN(event)" required />
            <small></small>
            @Html.ValidationMessageFor(model => model.booking.startTime)
        </div>

        <div class="form-group input-append date form_datetime">
            <label for="@booking.endTime ">Endzeit der Buchung</label>
            <input type="datetime-local" class="form-control" placeholder="@booking.startTime" asp-for="@booking.endTime" required />
            <small></small>
            @Html.ValidationMessageFor(model => model.booking.endTime)
        </div>
        @if (httpContextAccessor.HttpContext.Session.GetString("role").Equals(Sopro.Models.User.UserType.ASSISTANCE.ToString()))
        {
            <div class="form-group">
                <label for="@booking.user ">E-Mail des Gastes</label>
                <input type="email" class="form-control" placeholder="@httpContextAccessor.HttpContext.Session.GetString("email")" asp-for="@booking.user" />
                <small></small>
                @Html.ValidationMessageFor(model => model.booking.user)

            </div>
            <div class="form-group">
                <label for="@booking.priority">Priorität des Gastes</label>
                <select class="form-control" asp-for="@booking.priority">
                    <option value="GUEST">Gast</option>
                    <option value="VIP">VIP</option>
                </select>
                @Html.ValidationMessageFor(model => model.booking.priority)
            </div>
        }
        <div class="form-group float-right mt-4 mb-5 pb-3">
            <button type="submit" class="btn btn-primary btn-mhp">Buchen</button>
        </div>
    </div>
</form>
<script type="java">
    var now = new Date().toISOString().slice(0, 16);
    document.getElementById("booking_startTime").min = now;
    document.getElementById("booking_startTime").value = now;
    document.getElementById("booking_endTime").min = now;
    document.getElementById("booking_endTime").value = now;
</script>


