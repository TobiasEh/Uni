
@{
    ViewData["Title"] = "Auswertung";
    Layout = "_AdminLayout";
}

@using System.Linq;
@using Sopro.ViewModels
@model EvaluationViewModel
@{
    /*
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.DimensionOne).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.Quantity).ToList());
    */
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject((new List<string> { "CCS", "Type 2" }).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.plugDistributionAccepted.ToList());

    var XLabels2 = Newtonsoft.Json.JsonConvert.SerializeObject((new List<string> { "CCS", "Type 2" }).ToList());
    var YValues2 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.plugDistributionDeclined.ToList());

    var XLabels3 = Newtonsoft.Json.JsonConvert.SerializeObject((new List<string> { "Akzeptiert", "Abgelehnt" }).ToList());
    var YValues3 = Newtonsoft.Json.JsonConvert.SerializeObject(new List<double> { Model.bookingSuccessRate, 1 - Model.bookingSuccessRate });

    var XLabels4 = Newtonsoft.Json.JsonConvert.SerializeObject(Enumerable.Range(0, Model.scenario.getLocationWorkload().ToList().Count));
    var YValues4 = Newtonsoft.Json.JsonConvert.SerializeObject(Model.locationWorkload.ConvertAll(Convert.ToInt32).ToList());

    var XLabels5 = Newtonsoft.Json.JsonConvert.SerializeObject(Enumerable.Range(0, Model.scenario.getLocationWorkload().ToList().Count));
    List<string> YValues5 = new List<string>();
    foreach (List<double> d in Model.stationWorkload)
    {
        YValues5.Add(Newtonsoft.Json.JsonConvert.SerializeObject(d.ToList()));
    }

    ViewData["Title"] = "Pie Chart";
}

<h1 class="display-4 mb-5 pt-5">Auswertung</h1>

<div class="box-body d-flex justify-content-center">
    <div class="chart-container">
        <canvas id="chart4" style="width:100%; height:300px"></canvas>
    </div>
    <div class="chart-container">
        <canvas id="chart5" style="width:100%; height:300px"></canvas>
    </div>
</div>

<div class="box-body d-flex justify-content-center flex-wrap">

    <div class="chart-container">
        <canvas id="chart" style="width:100%; height:300px"></canvas>
    </div>
    <div class="chart-container">
        <canvas id="chart2" style="width:100%; height:300px"></canvas>
    </div>
    <div class="chart-container">
        <canvas id="chart3" style="width:100%; height:300px"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script type="text/javascript">

        $(function () {
        var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data =
        {
            labels: @Html.Raw(XLabels),
            datasets: [{
                label: "Plug distribution [Accepted Plugs]",
                backgroundColor: [
                    'rgba(89, 181, 228, 0.2)',
                    'rgba(254, 191, 45, 0.2)'
                ],
                borderColor: [
                    'rgba(89, 181, 228, 1)',
                    'rgba(254, 191, 45, 1)'
                ],
                borderWidth: 1,
                data: @Html.Raw(YValues),
            }]
        };

            var chartName2 = "chart2";
            var ctx2 = document.getElementById(chartName2).getContext('2d');
            var data2 = {
                labels: @Html.Raw(XLabels2),
                datasets: [{
                    label: "Plug distribution [Declined Plugs]",
                    backgroundColor: [
                        'rgba(0, 0, 0, 0.5)',
                        'rgba(99, 99, 99, 0.2)'
                    ],
                    borderColor: [
                        'rgba(0, 0, 0, 1)',
                        'rgba(99, 99, 99, 1)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues2),
                }]
            };

            var chartName3 = "chart3";
            var ctx3 = document.getElementById(chartName3).getContext('2d');
            var data3 = {
                labels: @Html.Raw(XLabels3),
                datasets: [{
                    label: "Plug distribution [Declined Plugs]",
                    backgroundColor: [
                        'rgba(141, 205, 89, 0.2)',
                        'rgba(237, 93, 146, 0.2)'
                    ],
                    borderColor: [
                        'rgba(141, 205, 89, 1)',
                        'rgba(237, 93, 146, 1)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues3),
                }]
            };

            var chartName4 = "chart4";
            var ctx4 = document.getElementById(chartName4).getContext('2d');
            var data4 = {
                labels: @Html.Raw(XLabels4),
                datasets: [{
                    label: "Location Workload",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues4),
                    }]
            };

            var chartName5 = "chart5";
            var ctx5 = document.getElementById(chartName5).getContext('2d');
            datax = [];
            @{ 
                foreach(string s in YValues5)
                {
                    @:datax.push(@Html.Raw(s))
                }
            }
            var data5 = {
                labels: @Html.Raw(XLabels5),
                datasets: [{
                    label: "Location Workload",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: datax,
                    }]
            };

            var options =
            {
                maintainAspectRatio: false,
                legend: {
                    reverse: true
                },
                animation: {
                    duration: 2000,
                },
                title: {
                    display: true,
                    text: ['Steckerverteilung', 'Akzeptierte Buchungen'],
                    fontSize: 20,
                    fontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                    fontStyle: 'normal',
                    fontColor: '#000'
                }
            };

            var options2 =
            {
                maintainAspectRatio: false,
                legend: {
                    reverse: true
                },
                animation: {
                    duration: 2000,
                },
                title: {
                    display: true,
                    text: ['Steckerverteilung', 'Abgelehnte Buchungen'],
                    fontSize: 20,
                    fontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                    fontStyle: 'normal',
                    fontColor: '#000'
                }
            };

            var options3 =
            {
                maintainAspectRatio: false,
                legend: {
                    reverse: true
                },
                animation: {
                    duration: 2000,
                },
                title: {
                    display: true,
                    text: "Buchungen",
                    fontSize: 20,
                    fontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                    fontStyle: 'normal',
                    fontColor: '#000'
                }
            };

            var options4 = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            max: 100,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

            var options5 = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

            var myChart = new Chart(ctx, {
                options: options,
                data: data,
                type: 'pie'
            });

            var myChart2 = new Chart(ctx2, {
                options: options2,
                data: data2,
                type: 'pie'
            });

            var myChart3 = new Chart(ctx3, {
                options: options3,
                data: data3,
                type: 'pie'
            });

            var myChart4 = new Chart(ctx4, {
                options: options4,
                data: data4,
                type: 'line'
            });

            var myChart5 = new Chart(ctx5, {
                options: options5,
                data: data5,
                type: 'line'
            });
        });
</script>
